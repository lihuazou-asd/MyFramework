using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Lesson35 : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        #region 知识点一 为什么要进行异步加载优化
        //我们之前制作UI管理器时，加载资源时是在测试模式下
        //始终使用的是编辑器同步加载模式
        //若真正使用异步加载时，可能会存在报错风险

        //举例重现问题：
        //1.构建AB包
        //2.采用异步加载方式加载AB包中的UI面板资源
        //3.同一帧显示两次UI面板
        //4.同一帧显示又隐藏UI面板
        #endregion

        #region 知识点二 优化异步加载问题
        //主要制作思路：
        //1.造成问题的关键点
        //  由于异步加载 字典容器中没有及时存储将要显示的面板对象
        //  我们需要在显示面板时 一开始就存储面板的相关信息
        //  这样不管是二次显示还是隐藏，都能够知道是否已经在加载面板了

        //2.分情况考虑问题（异步加载中 和 异步加载结束）
        //  显示相关
        //  1.若加载中想要显示，应该记录回调，加载结束后统一调用
        //  2.若加载结束后想显示，直接显示
        //  隐藏相关
        //  1.若加载中想要隐藏，应该改变标识
        //  2.若加载结束想要隐藏，直接隐藏
        //  3.若压根没有，不用处理
        //  获取相关
        //  1.若加载中想要获取，应该等待加载结束后再处理获取逻辑
        //  2.若加载结束想要获取，直接获取
        //  3.若压根没有，不用处理

        //主要解决的问题：
        //1.同一帧连续显示同一面板，避免重复进行异步加载后回调重复往字典中添加面板数据
        //2.同一帧 显示――>隐藏――>显示 同一面板问题，面板能够正常显示
        //3.获取面板时如果正在加载中，等加载结束后再获取处理逻辑
        #endregion
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
