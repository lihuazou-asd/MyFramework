using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Lesson42 : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        #region 知识点一 分析改建功能需求
        //1.改建功能应该是针对某一个行为的
        //  游戏中的行为是固定的，我们需要改变的是触发该行为的按键
        //  比如：角色有技能1、技能2、技能3，我们改变的是触发这些行为的输入

        //2.具体键位的触发不应该写死
        //  而是需要根据存储的键位数据进行初始化或进行修改

        //3.键位的修改可以是键盘输入，也可以是鼠标输入，输入类型也可以是任意的
        //  比如：触发技能1，可以修改为键盘输入，也可以修改为鼠标输入
        //  可以是按下、可以是抬起、也可以是长按，具体是哪种应该根据你的需求变化
        #endregion

        #region 知识点二 根据需求整理思路并制作
        //输入管理器主要做的事情
        //根据输入的信息，触发对应的事件
        //其中输入信息可变，触发的事件也可变

        //1.改建功能应该是针对某一个行为的
        //  触发的事件类型应该是针对行为的，因为行为一般在游戏中是固定的

        //2.具体键位的触发不应该写死
        //  输入管理器中应该声明字典容器
        //  键：触发事件的类型
        //  值：具体的输入信息（键盘还是鼠标、按下还是抬起还是长按、那个键）

        //3.键位的修改可以是键盘输入，也可以是鼠标输入，输入类型也可以是任意的
        //  输入管理器应该提供初始化行为对应的键位方法
        #endregion

        #region 总结
        //我们只需要使用数据持久化、UI相关知识点，再结合这节课的输入管理器 就可以做出完整的改建功能了

        //遗留问题：
        //在真正制作改建功能时
        //我们应该如何获取到任意键盘或任意鼠标输入来记录对应的输入信息
        #endregion
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
